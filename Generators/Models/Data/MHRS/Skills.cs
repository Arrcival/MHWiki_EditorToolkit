// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHRS
{
	public partial class Skills
	{
		[JsonProperty("snow.data.PlEquipSkillBaseUserData", NullValueHandling = NullValueHandling.Ignore)]
		public SnowDataPlEquipSkillBaseUserData SnowDataPlEquipSkillBaseUserData { get; set; }
	}

	public partial class SnowDataPlEquipSkillBaseUserData
	{
		[JsonProperty("_Param", NullValueHandling = NullValueHandling.Ignore)]
		public Param[] Param { get; set; }
	}

	public partial class Param
	{
		[JsonProperty("_Id", NullValueHandling = NullValueHandling.Ignore)]
		public long? Id { get; set; }

		[JsonProperty("_MaxLevel", NullValueHandling = NullValueHandling.Ignore)]
		public long? MaxLevel { get; set; }

		[JsonProperty("_IconColor", NullValueHandling = NullValueHandling.Ignore)]
		public long? IconColor { get; set; }

		[JsonProperty("_CategoryId_1", NullValueHandling = NullValueHandling.Ignore)]
		public long? CategoryId1 { get; set; }

		[JsonProperty("_CategoryId_2", NullValueHandling = NullValueHandling.Ignore)]
		public long? CategoryId2 { get; set; }

		[JsonProperty("_CategoryId_3", NullValueHandling = NullValueHandling.Ignore)]
		public long? CategoryId3 { get; set; }
	}

	public partial class Skills
	{
		public static Skills FromJson(string json) => JsonConvert.DeserializeObject<Skills>(json, MediawikiTranslator.Models.Data.MHRS.SkillsConverter.Settings);
	}

	public static class Serialize
	{
		public static string ToJson(this Skills self) => JsonConvert.SerializeObject(self, MediawikiTranslator.Models.Data.MHRS.SkillsConverter.Settings);
	}

	internal static class SkillsConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
