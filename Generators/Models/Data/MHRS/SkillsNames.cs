// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MediawikiTranslator.Models.Data.MHRS;
//
//    var skillsNames = SkillsNames.FromJson(jsonString);

namespace MediawikiTranslator.Models.Data.MHRS
{
	using System;
	using System.Collections.Generic;

	using System.Globalization;
	using Newtonsoft.Json;
	using Newtonsoft.Json.Converters;

	public partial class SkillsNames
	{
		[JsonProperty("msgs", NullValueHandling = NullValueHandling.Ignore)]
		public Dictionary<string, SkillsNamesMsg> Msgs { get; set; }

		[JsonProperty("name_to_uuid", NullValueHandling = NullValueHandling.Ignore)]
		public Dictionary<string, Guid> NameToUuid { get; set; }
	}

	public partial class SkillsNamesMsg
	{
		[JsonProperty("content", NullValueHandling = NullValueHandling.Ignore)]
		public string[] Content { get; set; }

		[JsonProperty("hash", NullValueHandling = NullValueHandling.Ignore)]
		public long? Hash { get; set; }

		[JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
		public string Name { get; set; }
	}

	public partial class SkillsNames
	{
		public static SkillsNames FromJson(string json) => JsonConvert.DeserializeObject<SkillsNames>(json, MediawikiTranslator.Models.Data.MHRS.SkillsNamesConverter.Settings);
	}

	public static class SkillsNamesSerialize
	{
		public static string ToJson(this SkillsNames self) => JsonConvert.SerializeObject(self, MediawikiTranslator.Models.Data.MHRS.SkillsNamesConverter.Settings);
	}

	internal static class SkillsNamesConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
