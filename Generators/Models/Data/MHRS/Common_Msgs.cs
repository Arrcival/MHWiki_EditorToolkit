// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHRS
{
	public partial class CommonMsgs
	{
		[JsonProperty("msgs", NullValueHandling = NullValueHandling.Ignore)]
		public Dictionary<string, CommonMsgsMsg> Msgs { get; set; }

		[JsonProperty("name_to_uuid", NullValueHandling = NullValueHandling.Ignore)]
		public Dictionary<string, Guid> NameToUuid { get; set; }
#nullable enable
		private static Dictionary<string, Guid>? _nameToUUID { get; set; }
		private static Dictionary<string, CommonMsgsMsg>? _msgs { get; set; }
#nullable disable


		public static Dictionary<string, CommonMsgsMsg> GetMsgs()
		{
			CommonMsgs src = FromJson(File.ReadAllText(@"D:\MH_Data Repo\MH_Data\Raw Data\MHRS\combined_msgs.json"));
			_msgs = src.Msgs;
			_nameToUUID = src.NameToUuid;
			return _msgs;
		}

		public static string GetMsg(string key)
		{
			if (_msgs == null)
			{
				GetMsgs();
			}
			if (_nameToUUID.ContainsKey(key))
			{
				if (_msgs.ContainsKey(_nameToUUID[key].ToString()))
				{
					return _msgs[_nameToUUID[key].ToString()].Content[1] ?? "";
				}
			}
			return "";
		}
	}

	public partial class CommonMsgsMsg
	{
		[JsonProperty("content", NullValueHandling = NullValueHandling.Ignore)]
		public string[] Content { get; set; }

		[JsonProperty("hash", NullValueHandling = NullValueHandling.Ignore)]
		public long? Hash { get; set; }

		[JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
		public string Name { get; set; }
	}

	public partial class CommonMsgs
	{
		public static CommonMsgs FromJson(string json) => JsonConvert.DeserializeObject<CommonMsgs>(json, MediawikiTranslator.Models.Data.MHRS.CommonMsgsConverter.Settings);
	}

	internal static class CommonMsgsConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
