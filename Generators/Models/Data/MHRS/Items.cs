// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHRS
{
	public class Items : ItemsParam
	{
		public string Name { get; set; }
		public string Description { get; set; }
		public string WikiIconColor { get; set; }
		public string WikiIconName { get; set; }
		public Items() { }
		public Items(ItemsParam src)
		{
			Id = src.Id;
			CariableFilter = src.CariableFilter;
			Type = src.Type;
			Rare = src.Rare;
			PlMaxCount = src.PlMaxCount;
			OtMaxCount = src.OtMaxCount;
			SortId = src.SortId;
			Supply = src.Supply;
			CanPutInOtDogPouch = src.CanPutInOtDogPouch;
			ShowItemWindow = src.ShowItemWindow;
			ShowActionWindow = src.ShowActionWindow;
			Infinite = src.Infinite;
			Default = src.Default;
			IconCanEat = src.IconCanEat;
			IconItemRank = src.IconItemRank;
			EffectRare = src.EffectRare;
			IconChara = src.IconChara;
			IconColor = src.IconColor;
			SeType = src.SeType;
			SellPrice = src.SellPrice;
			BuyPrice = src.BuyPrice;
			ItemActionType = src.ItemActionType;
			RankType = src.RankType;
			ItemGroup = src.ItemGroup;
			CategoryWorth = src.CategoryWorth;
			MaterialCategory = src.MaterialCategory;
			EvalutionValue = src.EvalutionValue;
		}
	}
	public partial class RawItems
	{
		[JsonProperty("snow.data.ItemUserData", NullValueHandling = NullValueHandling.Ignore)]
		public SnowDataItemUserData SnowDataItemUserData { get; set; }
	}

	public partial class SnowDataItemUserData
	{
		[JsonProperty("_Param", NullValueHandling = NullValueHandling.Ignore)]
		public ItemsParam[] Param { get; set; }
	}

	public partial class ItemsParam
	{
		[JsonProperty("_Id", NullValueHandling = NullValueHandling.Ignore)]
		public long? Id { get; set; }

		[JsonProperty("_CariableFilter", NullValueHandling = NullValueHandling.Ignore)]
		public long? CariableFilter { get; set; }

		[JsonProperty("_Type", NullValueHandling = NullValueHandling.Ignore)]
		public long? Type { get; set; }

		[JsonProperty("_Rare", NullValueHandling = NullValueHandling.Ignore)]
		public long? Rare { get; set; }

		[JsonProperty("_PlMaxCount", NullValueHandling = NullValueHandling.Ignore)]
		public long? PlMaxCount { get; set; }

		[JsonProperty("_OtMaxCount", NullValueHandling = NullValueHandling.Ignore)]
		public long? OtMaxCount { get; set; }

		[JsonProperty("_SortId", NullValueHandling = NullValueHandling.Ignore)]
		public long? SortId { get; set; }

		[JsonProperty("_Supply", NullValueHandling = NullValueHandling.Ignore)]
		public bool? Supply { get; set; }

		[JsonProperty("_CanPutInOtDogPouch", NullValueHandling = NullValueHandling.Ignore)]
		public bool? CanPutInOtDogPouch { get; set; }

		[JsonProperty("_ShowItemWindow", NullValueHandling = NullValueHandling.Ignore)]
		public bool? ShowItemWindow { get; set; }

		[JsonProperty("_ShowActionWindow", NullValueHandling = NullValueHandling.Ignore)]
		public bool? ShowActionWindow { get; set; }

		[JsonProperty("_Infinite", NullValueHandling = NullValueHandling.Ignore)]
		public bool? Infinite { get; set; }

		[JsonProperty("_Default", NullValueHandling = NullValueHandling.Ignore)]
		public bool? Default { get; set; }

		[JsonProperty("_IconCanEat", NullValueHandling = NullValueHandling.Ignore)]
		public bool? IconCanEat { get; set; }

		[JsonProperty("_IconItemRank", NullValueHandling = NullValueHandling.Ignore)]
		public long? IconItemRank { get; set; }

		[JsonProperty("_EffectRare", NullValueHandling = NullValueHandling.Ignore)]
		public bool? EffectRare { get; set; }

		[JsonProperty("_IconChara", NullValueHandling = NullValueHandling.Ignore)]
		public long? IconChara { get; set; }

		[JsonProperty("_IconColor", NullValueHandling = NullValueHandling.Ignore)]
		public long? IconColor { get; set; }

		[JsonProperty("_SeType", NullValueHandling = NullValueHandling.Ignore)]
		public long? SeType { get; set; }

		[JsonProperty("_SellPrice", NullValueHandling = NullValueHandling.Ignore)]
		public long? SellPrice { get; set; }

		[JsonProperty("_BuyPrice", NullValueHandling = NullValueHandling.Ignore)]
		public long? BuyPrice { get; set; }

		[JsonProperty("_ItemActionType", NullValueHandling = NullValueHandling.Ignore)]
		public long? ItemActionType { get; set; }

		[JsonProperty("_RankType", NullValueHandling = NullValueHandling.Ignore)]
		public long? RankType { get; set; }

		[JsonProperty("_ItemGroup", NullValueHandling = NullValueHandling.Ignore)]
		public long? ItemGroup { get; set; }

		[JsonProperty("_CategoryWorth", NullValueHandling = NullValueHandling.Ignore)]
		public long? CategoryWorth { get; set; }

		[JsonProperty("_MaterialCategory", NullValueHandling = NullValueHandling.Ignore)]
		public long[] MaterialCategory { get; set; }

		[JsonProperty("_EvalutionValue", NullValueHandling = NullValueHandling.Ignore)]
		public long? EvalutionValue { get; set; }
	}

	public partial class RawItems
	{
		public static RawItems FromJson(string json) => JsonConvert.DeserializeObject<RawItems>(json, MediawikiTranslator.Models.Data.MHRS.ItemsConverter.Settings);
	}

	public static class ItemsSerialize
	{
		public static string ToJson(this RawItems self) => JsonConvert.SerializeObject(self, MediawikiTranslator.Models.Data.MHRS.ItemsConverter.Settings);
	}

	internal static class ItemsConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
