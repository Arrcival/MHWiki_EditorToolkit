// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHWilds
{

	public partial class Skill
	{
		[JsonProperty("app.user_data.SkillData", NullValueHandling = NullValueHandling.Ignore)]
		public AppUserDataSkillData AppUserDataSkillData { get; set; }
		public static Skill GetSkills()
		{
			Dictionary<string, CommonMsgs> msgs = CommonMsgs.Fetch();
			Skill src = FromJson(File.ReadAllText(@"D:\mhwildsdata\outputs\stm\gamedesign\common\equip\skilldata.user.3.json"));
			SkillCommon srcCommon = SkillCommon.FromJson(File.ReadAllText(@"D:\mhwildsdata\outputs\stm\gamedesign\common\equip\skillcommondata.user.3.json"));
			foreach (SkillValue val in src.AppUserDataSkillData.Values)
			{
				SkillCommonValue comVal = srcCommon.AppUserDataSkillCommonData.Values.FirstOrDefault(x => val.SkillId == x.SkillId);
				val.SkillType = comVal.SkillType;
				val.SkillCategory = comVal.SkillCategory;
				val.SkillIconType = comVal.SkillIconType;
				val.SortId = comVal.SortId;
				if (msgs.ContainsKey(val.SkillNameId.ToString()))
				{
					val.SkillName = msgs[val.SkillNameId!.ToString()].Content[1];
				}
				if (msgs.ContainsKey(val.SkillNameId.ToString()))
				{
					val.SkillExplain = msgs[val.SkillExplainId!.ToString()].Content[1];
				}
			}
			return src;
		}
	}

	public partial class AppUserDataSkillData
	{
		[JsonProperty("_Values", NullValueHandling = NullValueHandling.Ignore)]
		public SkillValue[] Values { get; set; }
	}

	public partial class SkillValue
	{
		[JsonProperty("_Index", NullValueHandling = NullValueHandling.Ignore)]
		public long? Index { get; set; }

		[JsonProperty("_dataId", NullValueHandling = NullValueHandling.Ignore)]
		public long? DataId { get; set; }

		[JsonProperty("_skillId", NullValueHandling = NullValueHandling.Ignore)]
		public string SkillId { get; set; }

		[JsonProperty("_SkillLv", NullValueHandling = NullValueHandling.Ignore)]
		public long? SkillLv { get; set; }

		[JsonProperty("_skillName", NullValueHandling = NullValueHandling.Ignore)]
		public Guid? SkillNameId { get; set; }

		[JsonProperty("_skillExplain", NullValueHandling = NullValueHandling.Ignore)]
		public Guid? SkillExplainId { get; set; }

		[JsonProperty("_openSkill", NullValueHandling = NullValueHandling.Ignore)]
		public string[] OpenSkill { get; set; }

		[JsonProperty("_value", NullValueHandling = NullValueHandling.Ignore)]
		public long[] ValueValue { get; set; }

		[JsonIgnore]
		public string SkillType { get; set; }

		[JsonIgnore]
		public string SkillCategory { get; set; }

		[JsonIgnore]
		public string SkillIconType { get; set; }

		[JsonIgnore]
		public long? SortId { get; set; }

		[JsonIgnore]
		public string SkillName { get; set; }
		[JsonIgnore]
		public string SkillExplain { get; set; }
	}

	public partial class Skill
	{
		public static Skill FromJson(string json) => JsonConvert.DeserializeObject<Skill>(json, MediawikiTranslator.Models.Data.MHWilds.SkillConverter.Settings);
	}

	internal static class SkillConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
