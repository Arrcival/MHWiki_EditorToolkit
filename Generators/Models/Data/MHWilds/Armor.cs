// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHWilds
{

	public partial class Armor
	{
		[JsonProperty("app.user_data.ArmorData", NullValueHandling = NullValueHandling.Ignore)]
		public AppUserDataArmorData AppUserDataArmorData { get; set; }

		public static Armor GetArmors()
		{
			Dictionary<string, CommonMsgs> msgs = CommonMsgs.Fetch();
			Armor src = FromJson(File.ReadAllText(@"D:\mhwildsdata\outputs\stm\gamedesign\common\equip\armordata.user.3.json"));
			ArmorSeries srcSeries = ArmorSeries.FromJson(File.ReadAllText(@"D:\mhwildsdata\outputs\stm\gamedesign\common\equip\armorseriesdata.user.3.json"));
			foreach (Value val in src.AppUserDataArmorData.Values)
			{
				val.ArmorSeries = srcSeries.AppUserDataArmorSeriesData.Values.FirstOrDefault(x => !string.IsNullOrEmpty(val.Series) && x.Series == val.Series);
				if (val.ArmorSeries == null)
				{
					//"NONE" series
					val.ArmorSeries = srcSeries.AppUserDataArmorSeriesData.Values.First();
				}
				val.Name = msgs[val.NameId!.ToString()].Content[1];
				if (msgs.ContainsKey(val.ExplainId!.ToString()))
				{
					val.Explain = msgs[val.ExplainId!.ToString()].Content[1];
				}
				if (msgs.ContainsKey(val.ArmorSeries.NameId.ToString()))
				{
					val.ArmorSeries.Name = msgs[val.ArmorSeries.NameId!.ToString()].Content[1];
				}
			}
			return src;
		}
	}

	public partial class AppUserDataArmorData
	{
		[JsonProperty("_Values", NullValueHandling = NullValueHandling.Ignore)]
		public Value[] Values { get; set; }
	}

	public partial class Value
	{
		[JsonProperty("_Index", NullValueHandling = NullValueHandling.Ignore)]
		public long? Index { get; set; }

		[JsonProperty("_DataValue", NullValueHandling = NullValueHandling.Ignore)]
		public long? DataValue { get; set; }

		[JsonProperty("_Series", NullValueHandling = NullValueHandling.Ignore)]
		public string Series { get; set; }

		[JsonIgnore]
		public ArmorSeriesValue ArmorSeries { get; set; }

		[JsonProperty("_PartsType", NullValueHandling = NullValueHandling.Ignore)]
		public string PartsType { get; set; }

		[JsonProperty("_Name", NullValueHandling = NullValueHandling.Ignore)]
		public Guid? NameId { get; set; }

		[JsonProperty("_Explain", NullValueHandling = NullValueHandling.Ignore)]
		public Guid? ExplainId { get; set; }

		[JsonProperty("_Defense", NullValueHandling = NullValueHandling.Ignore)]
		public long? Defense { get; set; }

		[JsonProperty("_Resistance", NullValueHandling = NullValueHandling.Ignore)]
		public long[] Resistance { get; set; }

		[JsonProperty("_SlotLevel", NullValueHandling = NullValueHandling.Ignore)]
		public string[] SlotLevel { get; set; }

		[JsonProperty("_Skill", NullValueHandling = NullValueHandling.Ignore)]
		public string[] Skill { get; set; }

		[JsonProperty("_SkillLevel", NullValueHandling = NullValueHandling.Ignore)]
		public long[] SkillLevel { get; set; }
		[JsonIgnore]
		public string Name { get; set; }
		[JsonIgnore]
		public string Explain { get; set; }
	}

	public partial class Armor
	{
		public static Armor FromJson(string json) => JsonConvert.DeserializeObject<Armor>(json, MediawikiTranslator.Models.Data.MHWilds.ArmorConverter.Settings);
	}

	internal static class ArmorConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			}
		};
	}
}
