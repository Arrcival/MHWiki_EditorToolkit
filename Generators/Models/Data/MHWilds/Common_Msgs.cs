// <auto-generated />
using System.Globalization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHWilds
{

	public partial class CommonMsgs
	{
		[JsonProperty("content", NullValueHandling = NullValueHandling.Ignore)]
		public string[] Content { get; set; }

		[JsonProperty("hash", NullValueHandling = NullValueHandling.Ignore)]
		public long? Hash { get; set; }

		[JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
		public string Name { get; set; }

		public static Dictionary<string, CommonMsgs> Fetch()
		{
			return CommonMsgs.FromJson(Properties.Resources.mhwilds_combined_msgs)!;
		}
	}

	public partial class CommonMsgs
	{
		public static Dictionary<string, CommonMsgs> FromJson(string json) => JsonConvert.DeserializeObject<Dictionary<string, CommonMsgs>>(json, MediawikiTranslator.Models.Data.MHWilds.CommonMsgsConverter.Settings);
	}

	internal static class CommonMsgsConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
