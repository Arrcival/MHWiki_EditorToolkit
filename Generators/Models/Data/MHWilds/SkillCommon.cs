// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace MediawikiTranslator.Models.Data.MHWilds
{
	public partial class SkillCommon
	{
		[JsonProperty("app.user_data.SkillCommonData", NullValueHandling = NullValueHandling.Ignore)]
		public AppUserDataSkillCommonData AppUserDataSkillCommonData { get; set; }
	}

	public partial class AppUserDataSkillCommonData
	{
		[JsonProperty("_Values", NullValueHandling = NullValueHandling.Ignore)]
		public SkillCommonValue[] Values { get; set; }
	}

	public partial class SkillCommonValue
	{
		[JsonProperty("_Index", NullValueHandling = NullValueHandling.Ignore)]
		public long? Index { get; set; }

		[JsonProperty("_skillId", NullValueHandling = NullValueHandling.Ignore)]
		public string SkillId { get; set; }

		[JsonProperty("_skillType", NullValueHandling = NullValueHandling.Ignore)]
		public string SkillType { get; set; }

		[JsonProperty("_skillCategory", NullValueHandling = NullValueHandling.Ignore)]
		public string SkillCategory { get; set; }

		[JsonProperty("_SkillIconType", NullValueHandling = NullValueHandling.Ignore)]
		public string SkillIconType { get; set; }

		[JsonProperty("_skillName", NullValueHandling = NullValueHandling.Ignore)]
		public Guid? SkillNameId { get; set; }

		[JsonProperty("_skillExplain", NullValueHandling = NullValueHandling.Ignore)]
		public Guid? SkillExplainId { get; set; }

		[JsonProperty("_SortId", NullValueHandling = NullValueHandling.Ignore)]
		public long? SortId { get; set; }
	}

	public partial class SkillCommon
	{
		public static SkillCommon FromJson(string json) => JsonConvert.DeserializeObject<SkillCommon>(json, MediawikiTranslator.Models.Data.MHWilds.SkillCommonConverter.Settings);
	}

	internal static class SkillCommonConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
