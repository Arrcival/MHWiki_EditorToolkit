// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHWilds
{
	public partial class ItemRecipes
	{
		[JsonProperty("app.user_data.cItemRecipe", NullValueHandling = NullValueHandling.Ignore)]
		public AppUserDataCItemRecipe AppUserDataCItemRecipe { get; set; }
		public static ItemRecipes GetItemRecipes()
		{
			Items allItems = Items.GetItems();
			ItemRecipes src = FromJson(File.ReadAllText(@"D:\mhwildsdata\outputs\stm\gamedesign\common\item\itemrecipe.user.3.json"));
			foreach (ItemRecipesValue val in src.AppUserDataCItemRecipe.Values)
			{
				if (allItems.AppUserDataItemData.Values.Any(x => x.ItemId == val.ResultItem))
				{
					val.Result = allItems.AppUserDataItemData.Values.First(x => x.ItemId == val.ResultItem);
				}
				val.Ingredients = new ItemsValue[val.Item.Length];
				int cnt = 0;
				foreach (string itemID in val.Item)
				{
					if (allItems.AppUserDataItemData.Values.Any(x => x.ItemId == itemID))
					{
						val.Ingredients[cnt] = allItems.AppUserDataItemData.Values.First(x => x.ItemId == itemID);
					}
					cnt++;
				}
			}
			return src;
		}
	}

	public partial class AppUserDataCItemRecipe
	{
		[JsonProperty("_Values", NullValueHandling = NullValueHandling.Ignore)]
		public ItemRecipesValue[] Values { get; set; }
	}

	public partial class ItemRecipesValue
	{
		[JsonProperty("_Index", NullValueHandling = NullValueHandling.Ignore)]
		public long? Index { get; set; }

		[JsonProperty("_ItemRecipeId", NullValueHandling = NullValueHandling.Ignore)]
		public string ItemRecipeId { get; set; }

		[JsonProperty("_ResultItem", NullValueHandling = NullValueHandling.Ignore)]
		public string ResultItem { get; set; }
		[JsonIgnore]
		public ItemsValue Result { get; set; }

		[JsonProperty("_Item", NullValueHandling = NullValueHandling.Ignore)]
		public string[] Item { get; set; }
		[JsonIgnore]
		public ItemsValue[] Ingredients { get; set; }

		[JsonProperty("_Num", NullValueHandling = NullValueHandling.Ignore)]
		public long? Num { get; set; }

		[JsonProperty("_OpenStatus", NullValueHandling = NullValueHandling.Ignore)]
		public bool? OpenStatus { get; set; }

		[JsonProperty("_EnableAuto", NullValueHandling = NullValueHandling.Ignore)]
		public bool? EnableAuto { get; set; }

		[JsonProperty("_DefaultAutoFlag", NullValueHandling = NullValueHandling.Ignore)]
		public bool? DefaultAutoFlag { get; set; }
	}

	public partial class ItemRecipes
	{
		public static ItemRecipes FromJson(string json) => JsonConvert.DeserializeObject<ItemRecipes>(json, MediawikiTranslator.Models.Data.MHWilds.ItemRecipesConverter.Settings);
	}

	public static class Serialize
	{
		public static string ToJson(this ItemRecipes self) => JsonConvert.SerializeObject(self, MediawikiTranslator.Models.Data.MHWilds.ItemRecipesConverter.Settings);
	}

	internal static class ItemRecipesConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
