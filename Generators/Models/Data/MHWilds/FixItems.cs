// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHWilds
{

	public partial class FixItems
	{
		[JsonProperty("app.user_data.FixItems", NullValueHandling = NullValueHandling.Ignore)]
		public AppUserDataFixItems AppUserDataFixItems { get; set; }
	}

	public partial class AppUserDataFixItems
	{
		[JsonProperty("_Values", NullValueHandling = NullValueHandling.Ignore)]
		public FixItemsValue[] Values { get; set; }
	}

	public partial class FixItemsValue
	{
		[JsonProperty("_Index", NullValueHandling = NullValueHandling.Ignore)]
		public long? Index { get; set; }

		[JsonProperty("_ItemId", NullValueHandling = NullValueHandling.Ignore)]
		public string ItemId { get; set; }

		[JsonProperty("_StoryPackage", NullValueHandling = NullValueHandling.Ignore)]
		public string StoryPackage { get; set; }
	}

	public partial class FixItems
	{
		public static FixItems FromJson(string json) => JsonConvert.DeserializeObject<FixItems>(json, MediawikiTranslator.Models.Data.MHWilds.FixItemsConverter.Settings);
	}

	internal static class FixItemsConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
